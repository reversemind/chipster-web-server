buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.4.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'
//apply plugin: 'checkstyle'

defaultTasks 'distTar'



repositories {
    mavenCentral()
}

distTar {
    // to get .tar.gz instead of .tgz
    extension = "tar.gz"
    compression = Compression.GZIP
}

//test {
//    testLogging.showStandardStreams = true
//}


sourceCompatibility = 1.8
targetCompatibility = 1.8

//mainClassName = "fi.csc.chipster.toolbox.ToolboxService"
mainClassName = "fi.csc.chipster.rest.ServerLauncher"

jar {
    exclude 'log4j2-test.xml'
}

// use log4j2.xml when running
sourceSets {
    main {
        resources {
            exclude 'log4j2-test.xml'
        }
    }
}


run {
    standardInput = System.in
}

//checkstyle {
//    configFile = 'config/checkstyle/google_checks.xml' as File
//    ignoreFailures = true
//}

//tasks.withType(Checkstyle) {
//    include "fi/csc/chipster/toolbox/**"
//}

test {
    //exclude "fi/csc/chipster/sessiondb/AdminResourceTest.class"
    //exclude "fi/csc/chipster/sessiondb/EventTest.class"
    //exclude "fi/csc/chipster/scheduler/SchedulerTest.class"

}

dependencies {

    // logging
    compile "org.apache.logging.log4j:log4j-api:+"
    compile "org.apache.logging.log4j:log4j-core:+"
    compile "org.apache.logging.log4j:log4j-jul:+"
//    compile "org.apache.logging.log4j:log4j-slf4j-impl:+"
    compile "org.apache.logging.log4j:log4j-1.2-api:2.4.1"

    // jersey
    compile "org.glassfish.jersey:jersey-bom:2.26-b03"
    compile "org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.26-b03"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:2.26-b03"
    compile "org.glassfish.jersey.containers:jersey-container-jetty-http:2.26-b03" // JAX-RS in Jetty (file-broker)

//    // hibernate
//    compile "org.hibernate:hibernate-java8:5.0.0.CR4"
//    compile "org.hibernate:hibernate-c3p0:5.0.0.CR4"
//    compile "com.h2database:h2:1.3.176"

    // websockets
    compile "javax.websocket:javax.websocket-api:+"
    compile "org.eclipse.jetty.websocket:javax-websocket-server-impl:9.2.+"
    compile "org.glassfish.tyrus:tyrus-client:+"
    compile "org.glassfish.tyrus:tyrus-container-grizzly-client:+"

    // toolbox
//    compile "org.apache.activemq:activemq-client:5.10.0"

    // cli
//    compile "org.apache.commons:commons-compress:+"

    // other
    // jetty version set to latest stable release
    compile "org.eclipse.jetty:jetty-jmx:9.4.+"
    compile "org.eclipse.jetty:jetty-proxy:9.4.+"
    compile "commons-io:commons-io:2.4"
//    compile "org.springframework:spring:+" // TsvSorter.java using StringUtils
    compile "net.sourceforge.argparse4j:argparse4j:0.7.0"
    compile "org.apache.commons:commons-lang3:3.4"
    compile "com.esotericsoftware.yamlbeans:yamlbeans:1.06"

    // old codebase
//    compile ":chipster:+"

    // Spring Boot + other
    compile("org.springframework.boot:spring-boot-starter-websocket:1.5.4.RELEASE"){
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile "org.springframework.boot:spring-boot-starter-jetty:1.5.4.RELEASE"

    compile("org.webjars:webjars-locator")
    compile("org.webjars:sockjs-client:1.0.2")
    compile("org.webjars:stomp-websocket:2.3.3")
    compile("org.webjars:bootstrap:3.3.7")
    compile("org.webjars:jquery:3.1.0")


    compile 'org.eclipse.jetty.websocket:javax-websocket-server-impl:9.4+'
//    compile 'javax.websocket:javax.websocket-api:1.1'
    compile 'org.projectlombok:lombok:1.16.16'


    compile 'org.mitre.dsmiley.httpproxy:smiley-http-proxy-servlet:1.9'


    // Test
    testCompile "junit:junit:4.+"
}

mainClassName = "com.company.app.Application"


